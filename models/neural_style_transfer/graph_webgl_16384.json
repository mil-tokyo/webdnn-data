{
  "converted_at": 1511890328,
  "inputs": [
    "Variable0"
  ],
  "outputs": [
    "Variable205"
  ],
  "memory_layout": {
    "static": {
      "size": -1,
      "allocations": {
        "Variable1255": {
          "name": "Variable1255",
          "offset": -1,
          "size": 221184,
          "width": 4,
          "height": 13824,
          "channel_mode": "RGBA"
        },
        "ConstantVariable674": {
          "name": "ConstantVariable674",
          "offset": -1,
          "size": 16,
          "width": 16,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1257": {
          "name": "Variable1257",
          "offset": -1,
          "size": 3375104,
          "width": 16384,
          "height": 206,
          "channel_mode": "R"
        },
        "ConstantVariable717": {
          "name": "ConstantVariable717",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable0": {
          "name": "Variable0",
          "offset": -1,
          "size": 98304,
          "width": 16384,
          "height": 6,
          "channel_mode": "R"
        },
        "Variable1258": {
          "name": "Variable1258",
          "offset": -1,
          "size": 3375104,
          "width": 16384,
          "height": 206,
          "channel_mode": "R"
        },
        "ConstantVariable483": {
          "name": "ConstantVariable483",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable20": {
          "name": "ConstantVariable20",
          "offset": -1,
          "size": 32,
          "width": 32,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1216": {
          "name": "Variable1216",
          "offset": -1,
          "size": 6733824,
          "width": 16384,
          "height": 411,
          "channel_mode": "R"
        },
        "ConstantVariable357": {
          "name": "ConstantVariable357",
          "offset": -1,
          "size": 32,
          "width": 32,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable676": {
          "name": "ConstantVariable676",
          "offset": -1,
          "size": 32768,
          "width": 16,
          "height": 512,
          "channel_mode": "RGBA"
        },
        "Variable1320": {
          "name": "Variable1320",
          "offset": -1,
          "size": 6733824,
          "width": 16384,
          "height": 411,
          "channel_mode": "R"
        },
        "Variable30": {
          "name": "Variable30",
          "offset": -1,
          "size": 229376,
          "width": 16384,
          "height": 14,
          "channel_mode": "R"
        },
        "ConstantVariable65": {
          "name": "ConstantVariable65",
          "offset": -1,
          "size": 32,
          "width": 32,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable381": {
          "name": "ConstantVariable381",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable471": {
          "name": "ConstantVariable471",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable393": {
          "name": "ConstantVariable393",
          "offset": -1,
          "size": 32,
          "width": 32,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable684": {
          "name": "ConstantVariable684",
          "offset": -1,
          "size": 7776,
          "width": 243,
          "height": 32,
          "channel_mode": "R"
        },
        "ConstantVariable24": {
          "name": "ConstantVariable24",
          "offset": -1,
          "size": 3,
          "width": 3,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable685": {
          "name": "ConstantVariable685",
          "offset": -1,
          "size": 7776,
          "width": 243,
          "height": 32,
          "channel_mode": "R"
        },
        "ConstantVariable677": {
          "name": "ConstantVariable677",
          "offset": -1,
          "size": 131072,
          "width": 32,
          "height": 1024,
          "channel_mode": "RGBA"
        },
        "Variable1317": {
          "name": "Variable1317",
          "offset": -1,
          "size": 229376,
          "width": 16384,
          "height": 14,
          "channel_mode": "R"
        },
        "ConstantVariable729": {
          "name": "ConstantVariable729",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable682": {
          "name": "ConstantVariable682",
          "offset": -1,
          "size": 131072,
          "width": 256,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable387": {
          "name": "ConstantVariable387",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable474": {
          "name": "ConstantVariable474",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable447": {
          "name": "ConstantVariable447",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable695": {
          "name": "ConstantVariable695",
          "offset": -1,
          "size": 3888,
          "width": 4,
          "height": 243,
          "channel_mode": "RGBA"
        },
        "ConstantVariable486": {
          "name": "ConstantVariable486",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable363": {
          "name": "ConstantVariable363",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable17": {
          "name": "ConstantVariable17",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1217": {
          "name": "Variable1217",
          "offset": -1,
          "size": 6733824,
          "width": 16384,
          "height": 411,
          "channel_mode": "R"
        },
        "ConstantVariable675": {
          "name": "ConstantVariable675",
          "offset": -1,
          "size": 16,
          "width": 16,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1154": {
          "name": "Variable1154",
          "offset": -1,
          "size": 1990656,
          "width": 288,
          "height": 1728,
          "channel_mode": "RGBA"
        },
        "ConstantVariable711": {
          "name": "ConstantVariable711",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1218": {
          "name": "Variable1218",
          "offset": -1,
          "size": 6733824,
          "width": 16384,
          "height": 411,
          "channel_mode": "R"
        },
        "ConstantVariable456": {
          "name": "ConstantVariable456",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable123": {
          "name": "ConstantVariable123",
          "offset": -1,
          "size": 98304,
          "width": 16384,
          "height": 6,
          "channel_mode": "R"
        },
        "ConstantVariable723": {
          "name": "ConstantVariable723",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1203": {
          "name": "Variable1203",
          "offset": -1,
          "size": 442368,
          "width": 16384,
          "height": 27,
          "channel_mode": "R"
        },
        "Variable1198": {
          "name": "Variable1198",
          "offset": -1,
          "size": 98304,
          "width": 16384,
          "height": 6,
          "channel_mode": "R"
        },
        "ConstantVariable735": {
          "name": "ConstantVariable735",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable477": {
          "name": "ConstantVariable477",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable50": {
          "name": "Variable50",
          "offset": -1,
          "size": 229376,
          "width": 16384,
          "height": 14,
          "channel_mode": "R"
        },
        "Variable1138": {
          "name": "Variable1138",
          "offset": -1,
          "size": 3538944,
          "width": 128,
          "height": 6912,
          "channel_mode": "RGBA"
        },
        "Variable1243": {
          "name": "Variable1243",
          "offset": -1,
          "size": 221184,
          "width": 32,
          "height": 1728,
          "channel_mode": "RGBA"
        },
        "Variable1146": {
          "name": "Variable1146",
          "offset": -1,
          "size": 1990656,
          "width": 288,
          "height": 1728,
          "channel_mode": "RGBA"
        },
        "Variable152": {
          "name": "Variable152",
          "offset": -1,
          "size": 98304,
          "width": 16384,
          "height": 6,
          "channel_mode": "R"
        },
        "Variable1187": {
          "name": "Variable1187",
          "offset": -1,
          "size": 1769472,
          "width": 16384,
          "height": 108,
          "channel_mode": "R"
        },
        "Variable153": {
          "name": "Variable153",
          "offset": -1,
          "size": 98304,
          "width": 16384,
          "height": 6,
          "channel_mode": "R"
        },
        "Variable203": {
          "name": "Variable203",
          "offset": -1,
          "size": 98304,
          "width": 16384,
          "height": 6,
          "channel_mode": "R"
        },
        "ConstantVariable708": {
          "name": "ConstantVariable708",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1143": {
          "name": "Variable1143",
          "offset": -1,
          "size": 229376,
          "width": 16384,
          "height": 14,
          "channel_mode": "R"
        },
        "ConstantVariable714": {
          "name": "ConstantVariable714",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable450": {
          "name": "ConstantVariable450",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable462": {
          "name": "ConstantVariable462",
          "offset": -1,
          "size": 32,
          "width": 32,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable480": {
          "name": "ConstantVariable480",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable13": {
          "name": "Variable13",
          "offset": -1,
          "size": 442368,
          "width": 16384,
          "height": 27,
          "channel_mode": "R"
        },
        "ConstantVariable459": {
          "name": "ConstantVariable459",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable453": {
          "name": "ConstantVariable453",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1279": {
          "name": "Variable1279",
          "offset": -1,
          "size": 442368,
          "width": 16384,
          "height": 27,
          "channel_mode": "R"
        },
        "ConstantVariable726": {
          "name": "ConstantVariable726",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1245": {
          "name": "Variable1245",
          "offset": -1,
          "size": 442368,
          "width": 16,
          "height": 6912,
          "channel_mode": "RGBA"
        },
        "ConstantVariable694": {
          "name": "ConstantVariable694",
          "offset": -1,
          "size": 3888,
          "width": 4,
          "height": 243,
          "channel_mode": "RGBA"
        },
        "Variable1": {
          "name": "Variable1",
          "offset": -1,
          "size": 884736,
          "width": 16384,
          "height": 54,
          "channel_mode": "R"
        },
        "Variable1192": {
          "name": "Variable1192",
          "offset": -1,
          "size": 3538944,
          "width": 16384,
          "height": 216,
          "channel_mode": "R"
        },
        "Variable23": {
          "name": "Variable23",
          "offset": -1,
          "size": 229376,
          "width": 16384,
          "height": 14,
          "channel_mode": "R"
        },
        "Variable1201": {
          "name": "Variable1201",
          "offset": -1,
          "size": 3359232,
          "width": 243,
          "height": 13824,
          "channel_mode": "R"
        },
        "ConstantVariable72": {
          "name": "ConstantVariable72",
          "offset": -1,
          "size": 64,
          "width": 64,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1170": {
          "name": "Variable1170",
          "offset": -1,
          "size": 1990656,
          "width": 288,
          "height": 1728,
          "channel_mode": "RGBA"
        },
        "ConstantVariable683": {
          "name": "ConstantVariable683",
          "offset": -1,
          "size": 32768,
          "width": 128,
          "height": 64,
          "channel_mode": "RGBA"
        },
        "ConstantVariable78": {
          "name": "ConstantVariable78",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable143": {
          "name": "Variable143",
          "offset": -1,
          "size": 884736,
          "width": 16384,
          "height": 54,
          "channel_mode": "R"
        },
        "Variable1142": {
          "name": "Variable1142",
          "offset": -1,
          "size": 1769472,
          "width": 256,
          "height": 1728,
          "channel_mode": "RGBA"
        },
        "ConstantVariable468": {
          "name": "ConstantVariable468",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "ConstantVariable276": {
          "name": "ConstantVariable276",
          "offset": -1,
          "size": 98304,
          "width": 16384,
          "height": 6,
          "channel_mode": "R"
        },
        "ConstantVariable732": {
          "name": "ConstantVariable732",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "Variable1319": {
          "name": "Variable1319",
          "offset": -1,
          "size": 884736,
          "width": 16384,
          "height": 54,
          "channel_mode": "R"
        },
        "Variable1202": {
          "name": "Variable1202",
          "offset": -1,
          "size": 442368,
          "width": 16384,
          "height": 27,
          "channel_mode": "R"
        },
        "ConstantVariable720": {
          "name": "ConstantVariable720",
          "offset": -1,
          "size": 147456,
          "width": 288,
          "height": 128,
          "channel_mode": "RGBA"
        },
        "ConstantVariable465": {
          "name": "ConstantVariable465",
          "offset": -1,
          "size": 128,
          "width": 128,
          "height": 1,
          "channel_mode": "R"
        },
        "Variable1200": {
          "name": "Variable1200",
          "offset": -1,
          "size": 3359232,
          "width": 243,
          "height": 13824,
          "channel_mode": "R"
        },
        "Variable1256": {
          "name": "Variable1256",
          "offset": -1,
          "size": 221184,
          "width": 4,
          "height": 13824,
          "channel_mode": "RGBA"
        }
      }
    },
    "dynamic": {
      "size": -1,
      "allocations": {}
    },
    "mapping": {
      "Variable0": "Variable0",
      "Variable1321": "Variable1320",
      "Variable1319": "Variable1319",
      "Variable1200": "Variable1200",
      "Variable1201": "Variable1201",
      "Variable1203": "Variable1203",
      "Variable1202": "Variable1202",
      "Variable1": "Variable1",
      "Variable2": "Variable143",
      "Variable3": "Variable1319",
      "Variable340": "Variable1",
      "Variable10": "Variable143",
      "Variable1138": "Variable1138",
      "Variable1139": "Variable1202",
      "Variable12": "Variable1203",
      "Variable13": "Variable13",
      "Variable338": "Variable1202",
      "Variable20": "Variable1203",
      "Variable1142": "Variable1142",
      "Variable1143": "Variable1143",
      "Variable22": "Variable1317",
      "Variable23": "Variable23",
      "Variable336": "Variable1143",
      "Variable30": "Variable30",
      "Variable1146": "Variable1146",
      "Variable1291": "Variable1317",
      "Variable39": "Variable1143",
      "Variable40": "Variable23",
      "Variable1150": "Variable1146",
      "Variable1293": "Variable1143",
      "Variable345": "Variable1317",
      "Variable50": "Variable50",
      "Variable1154": "Variable1154",
      "Variable1295": "Variable1143",
      "Variable59": "Variable23",
      "Variable60": "Variable1317",
      "Variable1158": "Variable1146",
      "Variable1297": "Variable1143",
      "Variable347": "Variable1317",
      "Variable70": "Variable30",
      "Variable1162": "Variable1154",
      "Variable1299": "Variable1143",
      "Variable79": "Variable23",
      "Variable80": "Variable1317",
      "Variable1166": "Variable1146",
      "Variable1301": "Variable1143",
      "Variable349": "Variable1317",
      "Variable90": "Variable50",
      "Variable1170": "Variable1170",
      "Variable1303": "Variable1143",
      "Variable99": "Variable23",
      "Variable100": "Variable1317",
      "Variable1174": "Variable1146",
      "Variable1305": "Variable1143",
      "Variable351": "Variable1317",
      "Variable110": "Variable30",
      "Variable1178": "Variable1154",
      "Variable1307": "Variable1143",
      "Variable119": "Variable23",
      "Variable120": "Variable1317",
      "Variable1182": "Variable1146",
      "Variable1309": "Variable1143",
      "Variable353": "Variable1317",
      "Variable1277": "Variable23",
      "Variable1243": "Variable1243",
      "Variable1187": "Variable1187",
      "Variable1188": "Variable1202",
      "Variable132": "Variable13",
      "Variable133": "Variable1203",
      "Variable314": "Variable1202",
      "Variable1279": "Variable1279",
      "Variable1245": "Variable1245",
      "Variable1192": "Variable1192",
      "Variable1193": "Variable1319",
      "Variable142": "Variable1",
      "Variable143": "Variable143",
      "Variable312": "Variable1319",
      "Variable1221": "Variable1202",
      "Variable1210": "Variable1203",
      "Variable1315": "Variable1143",
      "Variable1256": "Variable1256",
      "Variable1311": "Variable1317",
      "Variable1255": "Variable1255",
      "Variable1257": "Variable1257",
      "Variable1320": "Variable1320",
      "Variable1258": "Variable1258",
      "Variable1222": "Variable13",
      "Variable1211": "Variable1202",
      "Variable1313": "Variable1143",
      "Variable1266": "Variable1255",
      "Variable1317": "Variable1317",
      "Variable1267": "Variable1256",
      "Variable1269": "Variable1258",
      "Variable1268": "Variable1257",
      "Variable1217": "Variable1217",
      "Variable1216": "Variable1216",
      "Variable1218": "Variable1218",
      "Variable1197": "Variable1320",
      "Variable1198": "Variable1198",
      "Variable152": "Variable152",
      "Variable153": "Variable153",
      "Variable203": "Variable203",
      "Variable205": "Variable1198",
      "ConstantVariable684": "ConstantVariable684",
      "ConstantVariable685": "ConstantVariable685",
      "ConstantVariable65": "ConstantVariable65",
      "ConstantVariable393": "ConstantVariable393",
      "ConstantVariable462": "ConstantVariable462",
      "ConstantVariable683": "ConstantVariable683",
      "ConstantVariable72": "ConstantVariable72",
      "ConstantVariable387": "ConstantVariable387",
      "ConstantVariable459": "ConstantVariable459",
      "ConstantVariable682": "ConstantVariable682",
      "ConstantVariable78": "ConstantVariable78",
      "ConstantVariable381": "ConstantVariable381",
      "ConstantVariable456": "ConstantVariable456",
      "ConstantVariable717": "ConstantVariable717",
      "ConstantVariable453": "ConstantVariable453",
      "ConstantVariable714": "ConstantVariable714",
      "ConstantVariable486": "ConstantVariable486",
      "ConstantVariable720": "ConstantVariable720",
      "ConstantVariable465": "ConstantVariable465",
      "ConstantVariable723": "ConstantVariable723",
      "ConstantVariable483": "ConstantVariable483",
      "ConstantVariable726": "ConstantVariable726",
      "ConstantVariable468": "ConstantVariable468",
      "ConstantVariable729": "ConstantVariable729",
      "ConstantVariable480": "ConstantVariable480",
      "ConstantVariable732": "ConstantVariable732",
      "ConstantVariable471": "ConstantVariable471",
      "ConstantVariable735": "ConstantVariable735",
      "ConstantVariable477": "ConstantVariable477",
      "ConstantVariable711": "ConstantVariable711",
      "ConstantVariable450": "ConstantVariable450",
      "ConstantVariable708": "ConstantVariable708",
      "ConstantVariable474": "ConstantVariable474",
      "ConstantVariable677": "ConstantVariable677",
      "ConstantVariable17": "ConstantVariable17",
      "ConstantVariable363": "ConstantVariable363",
      "ConstantVariable447": "ConstantVariable447",
      "ConstantVariable676": "ConstantVariable676",
      "ConstantVariable20": "ConstantVariable20",
      "ConstantVariable357": "ConstantVariable357",
      "ConstantVariable674": "ConstantVariable674",
      "ConstantVariable694": "ConstantVariable694",
      "ConstantVariable675": "ConstantVariable675",
      "ConstantVariable695": "ConstantVariable695",
      "ConstantVariable24": "ConstantVariable24",
      "ConstantVariable123": "ConstantVariable123",
      "ConstantVariable276": "ConstantVariable276"
    }
  },
  "weight_encoding": "eightbit",
  "placeholders": [],
  "shader_sources": {
    "PartialIm2Col_R_d8f0e4bcb30138108195cab30da1d8475b8ce696570d267e5833b79e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(243,1);\nconst ivec4 v1 = ivec4(3359232,46656,243,1);\nconst ivec4 v2 = ivec4(1,72,192,243);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(82944,27648,192,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,6);\nconst vec2 v7 = vec2(6.103515625e-05,0.16666666666666666);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_i(gl_FragCoord.yx,v0, v1, v2)));\n\n    variable_position_col[1] += 0;\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 3 / 9;\n    int kw = khkwc1 / 3 - kh * 9;\n    int c1 = khkwc1 - (kh * 9 + kw) * 3;\n\n    int h1 = h2 * 1 - 4 + kh * 1;\n    int w1 = w2 * 1 - 4 + kw * 1;\n\n    if (h1 < 0 || h1 >= 144 || w1 < 0 || w1 >= 192) {\n        gl_FragColor.r = 0.0;\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n    }\n}\n",
    "PartialIm2Col_R_665a25ed8490d025e12e9874850393b498fdaaf59b1da9d9f409d0fb": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(243,1);\nconst ivec4 v1 = ivec4(3359232,46656,243,1);\nconst ivec4 v2 = ivec4(1,72,192,243);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(82944,27648,192,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,6);\nconst vec2 v7 = vec2(6.103515625e-05,0.16666666666666666);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_i(gl_FragCoord.yx,v0, v1, v2)));\n\n    variable_position_col[1] += 72;\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 3 / 9;\n    int kw = khkwc1 / 3 - kh * 9;\n    int c1 = khkwc1 - (kh * 9 + kw) * 3;\n\n    int h1 = h2 * 1 - 4 + kh * 1;\n    int w1 = w2 * 1 - 4 + kw * 1;\n\n    if (h1 < 0 || h1 >= 144 || w1 < 0 || w1 >= 192) {\n        gl_FragColor.r = 0.0;\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n    }\n}\n",
    "Tensordot_R_be35140ec37a95cc5a78c4eb2d29195203e39de07d920b2c52392918": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec2 v1 = ivec2(32,1);\nconst ivec2 v2 = ivec2(13824,32);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.00411522633744856,7.233796296296296e-05);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.00411522633744856,0.03125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n\n    for (int k = 0; k < 243; k++) {\n        float v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4).r;\n        float v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6).r;\n\n        v += v_a * v_b;\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Concat_copy_to_y_93baf8ab072e0b416ca07e7d8b6dadd73b2fdd62719f1f8531af8b77": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(884736,27648,192,1);\nconst ivec4 v2 = ivec4(1,32,144,192);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(6.103515625e-05,0.018518518518518517);\nuniform sampler2D v5;\nconst ivec4 v6 = ivec4(442368,6144,32,1);\nconst ivec2 v7 = ivec2(1,16384);\nconst ivec2 v8 = ivec2(16384,27);\nconst vec2 v9 = vec2(6.103515625e-05,0.037037037037037035);\n\nvoid main() {\n    ivec4 variable_position_x = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)).xzwy);     \n    variable_position_x[1] -= 0;\n\n    gl_FragColor.r = (\n            variable_position_x[1] < 0 || variable_position_x[1] >= 72\n        ) \n        ? texture2D(v3, gl_FragCoord.xy * v4).r \n        : texture2D(v5,((vec2((convert_position_fast(variable_position_x,v6, v7, v8))) + 0.5) * v9)).r;\n}\n",
    "Concat_escape_to_ws_4500a3940662cccccd2c753bc9b325679ac6155c7bd004b41cc116b4": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(6.103515625e-05,0.018518518518518517);\n\nvoid main() { gl_FragColor = texture2D(v0, gl_FragCoord.xy * v1); }\n",
    "Concat_copy_to_y_e74a4813a0ad4d0f4312daaa38ff776929f41c76761658003d4d6d0d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(884736,27648,192,1);\nconst ivec4 v2 = ivec4(1,32,144,192);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(6.103515625e-05,0.018518518518518517);\nuniform sampler2D v5;\nconst ivec4 v6 = ivec4(442368,6144,32,1);\nconst ivec2 v7 = ivec2(1,16384);\nconst ivec2 v8 = ivec2(16384,27);\nconst vec2 v9 = vec2(6.103515625e-05,0.037037037037037035);\n\nvoid main() {\n    ivec4 variable_position_x = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)).xzwy);     \n    variable_position_x[1] -= 72;\n\n    gl_FragColor.r = (\n            variable_position_x[1] < 0 || variable_position_x[1] >= 72\n        ) \n        ? texture2D(v3, gl_FragCoord.xy * v4).r \n        : texture2D(v5,((vec2((convert_position_fast(variable_position_x,v6, v7, v8))) + 0.5) * v9)).r;\n}\n",
    "ElementwiseAdd_779829bb5cb665e69eea4d1c2902f539cc0cee4ff1bf9dc97e8bf833": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(27648,1,1,1);\nconst ivec4 v2 = ivec4(32,27648,1,1);\nuniform sampler2D v3;\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,54);\nconst vec2 v6 = vec2(6.103515625e-05,0.018518518518518517);\nconst ivec4 v7 = ivec4(32,1,1,1);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,32);\nconst ivec2 v11 = ivec2(32,1);\nconst vec2 v12 = vec2(0.03125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v1, v4, v5))) + 0.5) * v6)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v7);\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_x1,v9, v10, v11))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Elu_b9a552b87870c16adec84feaea24f782cf4347268061f80da56b6828": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(16384.0,54.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? (exp(x0) - 1.0) : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseMul_04bbba744889317a7b4edb48bd5881a341cd73edb4005ddee022ff4c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(27648,1,1,1);\nconst ivec4 v2 = ivec4(32,27648,1,1);\nuniform sampler2D v3;\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,54);\nconst vec2 v6 = vec2(6.103515625e-05,0.018518518518518517);\nconst ivec4 v7 = ivec4(32,1,1,1);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,32);\nconst ivec2 v11 = ivec2(32,1);\nconst vec2 v12 = vec2(0.03125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v1, v4, v5))) + 0.5) * v6)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v7);\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_x1,v9, v10, v11))) + 0.5) * v12)).r;\ny = x0 * x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_6b9840e872afe27be359244c75d28ed6acd207214f062ba1acddbf5d": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(512,4);\nconst ivec4 v1 = ivec4(3538944,49152,512,1);\nconst ivec4 v2 = ivec4(1,72,96,512);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(884736,27648,192,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,54);\nconst vec2 v7 = vec2(6.103515625e-05,0.018518518518518517);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 32 / 4;\n    int kw = khkwc1 / 32 - kh * 4;\n    int c1 = khkwc1 - (kh * 4 + kw) * 32;\n\n    int h1 = h2 * 2 - 1 + kh * 1;\n    int w1 = w2 * 2 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 144 || w1 < 0 || w1 >= 192) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n    }\n}\n",
    "Tensordot_RGBA_d5c92fedfee58336927a29e2e6ba9d135d421fd1a111ead01f7aa983": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec2 v1 = ivec2(64,1);\nconst ivec2 v2 = ivec2(6912,64);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0078125,0.00014467592592592592);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0078125,0.015625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n    \n    for (int k = 0; k < 128; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_2a81f3f65690c1280460b09f56a4d2872c8ed52bb48d55d97e90095c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(6912,1,1,1);\nconst ivec4 v2 = ivec4(64,6912,1,1);\nconst ivec4 v3 = ivec4(64,1,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,64);\nconst ivec2 v7 = ivec2(64,1);\nconst vec2 v8 = vec2(0.015625,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,64,1,1);\nconst ivec2 v11 = ivec2(1,16384);\nconst ivec2 v12 = ivec2(16384,27);\nconst vec2 v13 = vec2(6.103515625e-05,0.037037037037037035);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Elu_eec7a8b23eb30d410308000c9b6c9daaa03a962421e31a30188cf866": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(16384.0,27.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? (exp(x0) - 1.0) : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseMul_793e0d6f5728828235dd0f42f0afaec2d2f6f901bc5c625532f8503e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(6912,1,1,1);\nconst ivec4 v2 = ivec4(64,6912,1,1);\nuniform sampler2D v3;\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,27);\nconst vec2 v6 = vec2(6.103515625e-05,0.037037037037037035);\nconst ivec4 v7 = ivec4(64,1,1,1);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,64);\nconst ivec2 v11 = ivec2(64,1);\nconst vec2 v12 = vec2(0.015625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v1, v4, v5))) + 0.5) * v6)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v7);\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_x1,v9, v10, v11))) + 0.5) * v12)).r;\ny = x0 * x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_3b9a057dd5a06dcee4045fe6f0c4e23246a748755370205247f23f95": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(6912,1,1,1);\nconst ivec4 v2 = ivec4(64,6912,1,1);\nuniform sampler2D v3;\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,27);\nconst vec2 v6 = vec2(6.103515625e-05,0.037037037037037035);\nconst ivec4 v7 = ivec4(64,1,1,1);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,64);\nconst ivec2 v11 = ivec2(64,1);\nconst vec2 v12 = vec2(0.015625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v1, v4, v5))) + 0.5) * v6)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v7);\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_x1,v9, v10, v11))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_f88432d47cdeed67f51f4078e73f5e1831cbc82218bbb80bad0507a8": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1024,4);\nconst ivec4 v1 = ivec4(1769472,49152,1024,1);\nconst ivec4 v2 = ivec4(1,36,48,1024);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(442368,6912,96,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,27);\nconst vec2 v7 = vec2(6.103515625e-05,0.037037037037037035);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 64 / 4;\n    int kw = khkwc1 / 64 - kh * 4;\n    int c1 = khkwc1 - (kh * 4 + kw) * 64;\n\n    int h1 = h2 * 2 - 1 + kh * 1;\n    int w1 = w2 * 2 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 72 || w1 < 0 || w1 >= 96) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n    }\n}\n",
    "Tensordot_RGBA_6083a98c8c767c1cbe82eeab1a4726e6bd3a301bfdbaa464eec326f0": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(1728,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.00390625,0.0005787037037037037);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.00390625,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n    \n    for (int k = 0; k < 256; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "ElementwiseAdd_b47c323216519dd3605b3dc630a6be41c47cb25065c097b4e5381885": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(1728,1,1,1);\nconst ivec4 v2 = ivec4(128,1728,1,1);\nconst ivec4 v3 = ivec4(128,1,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,128);\nconst ivec2 v7 = ivec2(128,1);\nconst vec2 v8 = vec2(0.0078125,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,128,1,1);\nconst ivec2 v11 = ivec2(1,16384);\nconst ivec2 v12 = ivec2(16384,14);\nconst vec2 v13 = vec2(6.103515625e-05,0.07142857142857142);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Elu_833b6938324c6eb68cb09779ea82c8e912e8921dbdb2869bb1020280": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(16384.0,14.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? (exp(x0) - 1.0) : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseMul_20b42d46c6a46409e9a7f4db71a94c1511bca7211f4dfb32a134ca2f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(1728,1,1,1);\nconst ivec4 v2 = ivec4(128,1728,1,1);\nuniform sampler2D v3;\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,14);\nconst vec2 v6 = vec2(6.103515625e-05,0.07142857142857142);\nconst ivec4 v7 = ivec4(128,1,1,1);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,128);\nconst ivec2 v11 = ivec2(128,1);\nconst vec2 v12 = vec2(0.0078125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v1, v4, v5))) + 0.5) * v6)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v7);\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_x1,v9, v10, v11))) + 0.5) * v12)).r;\ny = x0 * x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_3b48cbb09bbb597749abbe73528a351b39ea986d1246bb6f503c400e": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(1728,1,1,1);\nconst ivec4 v2 = ivec4(128,1728,1,1);\nuniform sampler2D v3;\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,14);\nconst vec2 v6 = vec2(6.103515625e-05,0.07142857142857142);\nconst ivec4 v7 = ivec4(128,1,1,1);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,128);\nconst ivec2 v11 = ivec2(128,1);\nconst vec2 v12 = vec2(0.0078125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v1, v4, v5))) + 0.5) * v6)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v7);\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_x1,v9, v10, v11))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(1152,4);\nconst ivec4 v1 = ivec4(1990656,55296,1152,1);\nconst ivec4 v2 = ivec4(1,36,48,1152);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(221184,1728,48,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,14);\nconst vec2 v7 = vec2(6.103515625e-05,0.07142857142857142);\n\nvoid main() {\n    ivec4 variable_position_col = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)));\n\n    int n  = variable_position_col.x;\n    int h2 = variable_position_col.y;\n    int w2 = variable_position_col.z;\n    int khkwc1 = variable_position_col.w;\n\n    int kh = khkwc1 / 128 / 3;\n    int kw = khkwc1 / 128 - kh * 3;\n    int c1 = khkwc1 - (kh * 3 + kw) * 128;\n\n    int h1 = h2 * 1 - 1 + kh * 1;\n    int w1 = w2 * 1 - 1 + kw * 1;\n\n    if (h1 < 0 || h1 >= 36 || w1 < 0 || w1 >= 48) {\n        gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\n    } else {\n        gl_FragColor.r = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 0).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n        gl_FragColor.g = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 1).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n        gl_FragColor.b = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 2).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n        gl_FragColor.a = (texture2D(v3,((vec2((convert_position_fast((vec4(n, h1, w1, c1 + 3).xwyz),v4, v5, v6))) + 0.5) * v7))).r;\n    }\n}\n",
    "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec2 v1 = ivec2(128,1);\nconst ivec2 v2 = ivec2(1728,128);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.003472222222222222,0.0005787037037037037);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.003472222222222222,0.0078125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n    \n    for (int k = 0; k < 288; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Relu_a3792264d6447601e21e48fcb5f07ef8151fed1509688c634061f2c1": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(16384.0,14.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\ny = x0 < 0.0 ? 0.0 : x0;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_b656c8acbb0d34827af73828d6620f3d4f2be005577912b6d6cb1251": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(1728,1,1,1);\nconst ivec4 v2 = ivec4(128,1728,1,1);\nuniform sampler2D v3;\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,14);\nconst vec2 v6 = vec2(6.103515625e-05,0.07142857142857142);\nuniform sampler2D v7;\nconst ivec4 v8 = ivec4(1,128,1,1);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x1 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v1, v4, v5))) + 0.5) * v6)).r;\nfloat x0 = texture2D(v7, ((vec2((convert_position_fast(variable_position_y,v8, v4, v5))) + 0.5) * v6)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_e43be927c3931563bbd9133021735750f0657aa9cb0f3c84abeb6959": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(1728,1,1,1);\nconst ivec4 v2 = ivec4(128,1728,1,1);\nuniform sampler2D v3;\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,14);\nconst vec2 v6 = vec2(6.103515625e-05,0.07142857142857142);\nconst ivec4 v7 = ivec4(128,1,1,1);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,128);\nconst ivec2 v11 = ivec2(128,1);\nconst vec2 v12 = vec2(0.0078125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x1 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v1, v4, v5))) + 0.5) * v6)).r;\nivec4 variable_position_x0 = mod(variable_position_y, v7);\nfloat x0 = texture2D(v8, ((vec2((convert_position_fast(variable_position_x0,v9, v10, v11))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_3e601c08f2f462298c8fc69e7eb4603c466529ad59194b83e2c0b825": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(128,1,1,1);\nconst ivec4 v2 = ivec4(1728,128,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,1728,1,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,14);\nconst vec2 v7 = vec2(6.103515625e-05,0.07142857142857142);\nconst ivec4 v8 = ivec4(1,128,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,128);\nconst ivec2 v12 = ivec2(128,1);\nconst vec2 v13 = vec2(0.0078125,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x1 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6))) + 0.5) * v7)).r;\nivec4 variable_position_x0 = mod(variable_position_y, v8);\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x0,v10, v11, v12))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_d5fa0934bcf99c6a1f0e53bca17803cf3544459ab386108a411d3886": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(128,4,1);\nconst ivec3 v2 = ivec3(16384,1,1);\nconst ivec3 v3 = ivec3(14,16384,1);\nconst vec3 v4 = vec3(0.07142857142857142,6.103515625e-05,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v1, v2, v3))) + 0.5) * v4).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v1, v2, v3))) + 0.5) * v4).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v1, v2, v3))) + 0.5) * v4).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_e335f8ecfe6e256e0be88934202c6684799e699d0237c5db01dcdf9f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec2 v1 = ivec2(1024,1);\nconst ivec2 v2 = ivec2(1728,1024);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.03125,0.0005787037037037037);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.03125,0.0009765625);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_i(gl_FragCoord.yx,v0, v1, v2));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n    \n    for (int k = 0; k < 32; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Col2Im_cb545a328b95fe19b675e0b66c2291941ac626bd3c778e74e8e97b89": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(442368,6144,64,1);\nconst ivec4 v2 = ivec4(1,72,96,64);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1769472,49152,1024,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,108);\nconst vec2 v7 = vec2(6.103515625e-05,0.009259259259259259);\n\nvoid main() {\n    ivec4 variable_position_im = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)));\n\n    int n = variable_position_im.x;\n    int h1 = variable_position_im.y;\n    int w1 = variable_position_im.z; \n    int c1 = variable_position_im.w;\n\n    float sum = 0.0;\n\n    for (int kh = 0; kh < 4; kh++) {\n        int h2 = (h1 + 1 - kh) / 2;\n        if (mod(h1 + 1 - kh, 2) != 0 || h2 < 0 || h2 >= 36) continue;\n\n        for (int kw = 0; kw < 4; kw++) {\n            int w2 = (w1 + 1 - kw) / 2;\n            if (mod(w1 + 1 - kw, 2) != 0 || w2 < 0 || w2 >= 48) continue;\n\n            int khkwc1 = (kh * 4 + kw) * 64 + c1;\n\n            sum += texture2D(v3,((vec2((convert_position_i((vec4(n, h2, w2, khkwc1)),v4, v5, v6))) + 0.5) * v7)).r;\n        }\n    }\n\n    gl_FragColor.r = sum;\n}\n",
    "ElementwiseAdd_9a2d6803d446e800a02472ec75f881de8f84ccd90d14b6a5e46a96b1": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(64,1,1,1);\nconst ivec4 v2 = ivec4(6912,64,1,1);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(1,6912,1,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,27);\nconst vec2 v7 = vec2(6.103515625e-05,0.037037037037037035);\nconst ivec4 v8 = ivec4(1,64,1,1);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,1,1,1);\nconst ivec2 v11 = ivec2(1,64);\nconst ivec2 v12 = ivec2(64,1);\nconst vec2 v13 = vec2(0.015625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v4, v5, v6))) + 0.5) * v7)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v8);\nfloat x1 = texture2D(v9, ((vec2((convert_position_fast(variable_position_x1,v10, v11, v12))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ConvertRtoRGBA_d1fa172b5dd7fba477133125ff794e5c4d7c64f0385b3cc9c193fc20": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(64,4,1);\nconst ivec3 v2 = ivec3(16384,1,1);\nconst ivec3 v3 = ivec3(27,16384,1);\nconst vec3 v4 = vec3(0.037037037037037035,6.103515625e-05,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v1, v2, v3))) + 0.5) * v4).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v1, v2, v3))) + 0.5) * v4).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v1, v2, v3))) + 0.5) * v4).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_7686d70cb9ec17831e10eaef0ffd65d7f3a6ae6e01518d87e6bf4fd2": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec2 v1 = ivec2(512,1);\nconst ivec2 v2 = ivec2(6912,512);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.0625,0.00014467592592592592);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.0625,0.001953125);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_i(gl_FragCoord.yx,v0, v1, v2));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n    \n    for (int k = 0; k < 16; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Col2Im_0493b086a585d9534fdac59416913a43d6b68f8d7e64cada51a7c630": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(884736,6144,32,1);\nconst ivec4 v2 = ivec4(1,144,192,32);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(3538944,49152,512,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,216);\nconst vec2 v7 = vec2(6.103515625e-05,0.004629629629629629);\n\nvoid main() {\n    ivec4 variable_position_im = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)));\n\n    int n = variable_position_im.x;\n    int h1 = variable_position_im.y;\n    int w1 = variable_position_im.z; \n    int c1 = variable_position_im.w;\n\n    float sum = 0.0;\n\n    for (int kh = 0; kh < 4; kh++) {\n        int h2 = (h1 + 1 - kh) / 2;\n        if (mod(h1 + 1 - kh, 2) != 0 || h2 < 0 || h2 >= 72) continue;\n\n        for (int kw = 0; kw < 4; kw++) {\n            int w2 = (w1 + 1 - kw) / 2;\n            if (mod(w1 + 1 - kw, 2) != 0 || w2 < 0 || w2 >= 96) continue;\n\n            int khkwc1 = (kh * 4 + kw) * 32 + c1;\n\n            sum += texture2D(v3,((vec2((convert_position_i((vec4(n, h2, w2, khkwc1)),v4, v5, v6))) + 0.5) * v7)).r;\n        }\n    }\n\n    gl_FragColor.r = sum;\n}\n",
    "ElementwiseAdd_4ee32a763b2469e020fb5b198a5a3f4c4b528b254e8f3cf51976be0f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(27648,1,1,1);\nconst ivec4 v2 = ivec4(32,27648,1,1);\nconst ivec4 v3 = ivec4(32,1,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,32);\nconst ivec2 v7 = ivec2(32,1);\nconst vec2 v8 = vec2(0.03125,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,32,1,1);\nconst ivec2 v11 = ivec2(1,16384);\nconst ivec2 v12 = ivec2(16384,54);\nconst vec2 v13 = vec2(6.103515625e-05,0.018518518518518517);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "SplitAxis_c2e4f00759db25390b1451ed16c963f2ff1d8616ef9d04db6d3067b1": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(442368,27648,192,1);\nconst ivec4 v2 = ivec4(1,16,144,192);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(884736,27648,192,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,54);\nconst vec2 v7 = vec2(6.103515625e-05,0.018518518518518517);\n\nvoid main() {\n    ivec4 variable_position_x = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)));     \n    variable_position_x[1] += 0;\n    \n    gl_FragColor.r = texture2D(v3,((vec2((convert_position_fast(variable_position_x,v4, v5, v6))) + 0.5) * v7)).r;\n}\n",
    "SplitAxis_20904a22254540b670c849a0ce5028e43a1d779015c113f716708f5f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(442368,27648,192,1);\nconst ivec4 v2 = ivec4(1,16,144,192);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(884736,27648,192,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,54);\nconst vec2 v7 = vec2(6.103515625e-05,0.018518518518518517);\n\nvoid main() {\n    ivec4 variable_position_x = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)));     \n    variable_position_x[1] += 16;\n    \n    gl_FragColor.r = texture2D(v3,((vec2((convert_position_fast(variable_position_x,v4, v5, v6))) + 0.5) * v7)).r;\n}\n",
    "ElementwiseAdd_941e69524313e2d9b60b1c24fbf02d7c3ea154dd4636abcb85d602df": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(27648,1,1,1);\nconst ivec4 v2 = ivec4(16,27648,1,1);\nuniform sampler2D v3;\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,27);\nconst vec2 v6 = vec2(6.103515625e-05,0.037037037037037035);\nconst ivec4 v7 = ivec4(16,1,1,1);\nuniform sampler2D v8;\nconst ivec4 v9 = ivec4(1,1,1,1);\nconst ivec2 v10 = ivec2(1,16);\nconst ivec2 v11 = ivec2(16,1);\nconst vec2 v12 = vec2(0.0625,1.0);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nfloat x0 = texture2D(v3, ((vec2((convert_position_fast(variable_position_y,v1, v4, v5))) + 0.5) * v6)).r;\nivec4 variable_position_x1 = mod(variable_position_y, v7);\nfloat x1 = texture2D(v8, ((vec2((convert_position_fast(variable_position_x1,v9, v10, v11))) + 0.5) * v12)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "SplitAxis_da08c4b33042bbc98d3bb55ed40adac8bce0b5a143fe37bb0e0cec86": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(221184,3072,16,1);\nconst ivec4 v2 = ivec4(1,72,192,16);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(442368,27648,192,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,27);\nconst vec2 v7 = vec2(6.103515625e-05,0.037037037037037035);\n\nvoid main() {\n    ivec4 variable_position_x = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)).xwyz);     \n    variable_position_x[2] += 0;\n    \n    gl_FragColor.r = texture2D(v3,((vec2((convert_position_fast(variable_position_x,v4, v5, v6))) + 0.5) * v7)).r;\n}\n",
    "SplitAxis_4795a17f337695d36bfe236036809e23292c88fe7586e65cd9270da3": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(221184,3072,16,1);\nconst ivec4 v2 = ivec4(1,72,192,16);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(442368,27648,192,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,27);\nconst vec2 v7 = vec2(6.103515625e-05,0.037037037037037035);\n\nvoid main() {\n    ivec4 variable_position_x = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)).xwyz);     \n    variable_position_x[2] += 72;\n    \n    gl_FragColor.r = texture2D(v3,((vec2((convert_position_fast(variable_position_x,v4, v5, v6))) + 0.5) * v7)).r;\n}\n",
    "ConvertRtoRGBA_c2dd2708dc5a59741705f29992fc9eae26866547200c1b9ccde1f353": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec3 v1 = ivec3(16,4,1);\nconst ivec3 v2 = ivec3(16384,1,1);\nconst ivec3 v3 = ivec3(14,16384,1);\nconst vec3 v4 = vec3(0.07142857142857142,6.103515625e-05,1.0);\n\nvoid main() {\n    float y0 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 0),v1, v2, v3))) + 0.5) * v4).yx).r;\n    float y1 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 1),v1, v2, v3))) + 0.5) * v4).yx).r;\n    float y2 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 2),v1, v2, v3))) + 0.5) * v4).yx).r;\n    float y3 = texture2D(v0, ((vec3((convert_position_fast(ivec3(gl_FragCoord.y, gl_FragCoord.x, 3),v1, v2, v3))) + 0.5) * v4).yx).r;\n\n    gl_FragColor = vec4(y0, y1, y2, y3);\n}\n",
    "Tensordot_RGBA_2494915644cccf2655a20d88178f93630ee458695c83dc182a09a84c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec2 v1 = ivec2(243,1);\nconst ivec2 v2 = ivec2(13824,243);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(0.25,7.233796296296296e-05);\nuniform sampler2D v5;\nconst vec2 v6 = vec2(0.25,0.00411522633744856);\n\nvoid main() {\n    ivec2 variable_position_c = (convert_position_i(gl_FragCoord.yx,v0, v1, v2));\n\n    int m = variable_position_c.x;\n    int n = variable_position_c.y;\n\n    float v = 0.0;\n    \n    for (int k = 0; k < 4; k++) {\n        vec4 v_a = texture2D(v3, (vec2(k, m) + 0.5) * v4);\n        vec4 v_b = texture2D(v5, (vec2(k, n) + 0.5) * v6);\n\n        v += dot(v_a, v_b);\n    }\n\n    gl_FragColor.r = v;\n}\n",
    "Concat_copy_to_y_4b19d1c6545fab989f982971aaef90535f24758af1ca4c9949ebd059": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(6718464,46656,243,1);\nconst ivec4 v2 = ivec4(1,144,192,243);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(6.103515625e-05,0.0024330900243309003);\nuniform sampler2D v5;\nconst ivec4 v6 = ivec4(3359232,46656,243,1);\nconst ivec2 v7 = ivec2(1,16384);\nconst ivec2 v8 = ivec2(16384,206);\nconst vec2 v9 = vec2(6.103515625e-05,0.0048543689320388345);\n\nvoid main() {\n    ivec4 variable_position_x = ((convert_position_i(gl_FragCoord.yx,v0, v1, v2)));     \n    variable_position_x[1] -= 0;\n\n    gl_FragColor.r = (\n            variable_position_x[1] < 0 || variable_position_x[1] >= 72\n        ) \n        ? texture2D(v3, gl_FragCoord.xy * v4).r \n        : texture2D(v5,((vec2((convert_position_i(variable_position_x,v6, v7, v8))) + 0.5) * v9)).r;\n}\n",
    "Concat_escape_to_ws_e7330b66c7e8f66e2f609c737d15eda30ccbf485593bda19cd5a1804": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(6.103515625e-05,0.0024330900243309003);\n\nvoid main() { gl_FragColor = texture2D(v0, gl_FragCoord.xy * v1); }\n",
    "Concat_copy_to_y_655fcb1745f3cbc470d63d92f5079eeaaf90e713ee2a64914ff68e5c": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(6718464,46656,243,1);\nconst ivec4 v2 = ivec4(1,144,192,243);\nuniform sampler2D v3;\nconst vec2 v4 = vec2(6.103515625e-05,0.0024330900243309003);\nuniform sampler2D v5;\nconst ivec4 v6 = ivec4(3359232,46656,243,1);\nconst ivec2 v7 = ivec2(1,16384);\nconst ivec2 v8 = ivec2(16384,206);\nconst vec2 v9 = vec2(6.103515625e-05,0.0048543689320388345);\n\nvoid main() {\n    ivec4 variable_position_x = ((convert_position_i(gl_FragCoord.yx,v0, v1, v2)));     \n    variable_position_x[1] -= 72;\n\n    gl_FragColor.r = (\n            variable_position_x[1] < 0 || variable_position_x[1] >= 72\n        ) \n        ? texture2D(v3, gl_FragCoord.xy * v4).r \n        : texture2D(v5,((vec2((convert_position_i(variable_position_x,v6, v7, v8))) + 0.5) * v9)).r;\n}\n",
    "ElementwiseAdd_5cdcfd8d6af8efb5b02caad11413d0e5bedf85f164916397a57c66e9": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(16384.0,411.0);\nuniform sampler2D v2;\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v1).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Reshape_7461de959a54be684d71d0b2ab0beff68ac17d8828680b1d2e0ac519": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst ivec2 v1 = ivec2(16384,1);\nconst ivec4 v2 = ivec4(124416,2304,48,1);\nconst ivec4 v3 = ivec4(54,54,48,48);\nconst ivec2 v4 = ivec2(1,16384);\nconst ivec2 v5 = ivec2(16384,411);\nconst vec2 v6 = vec2(6.103515625e-05,0.0024330900243309003);\n\nvoid main() {\n    gl_FragColor.r = texture2D(v0,((vec2((convert_position_i(((convert_position_i(((convert_position_i(gl_FragCoord.yx,v1, v2, v3))),v2, v2, v3))),v2, v4, v5))) + 0.5) * v6)).r; \n}\n",
    "Col2Im_eb74a508d862b4be7c212835d8cb2aa86d71638bad44a08562bf3eb3": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(82944,576,3,1);\nconst ivec4 v2 = ivec4(1,144,192,3);\nuniform sampler2D v3;\nconst ivec4 v4 = ivec4(6718464,46656,243,1);\nconst ivec2 v5 = ivec2(1,16384);\nconst ivec2 v6 = ivec2(16384,411);\nconst vec2 v7 = vec2(6.103515625e-05,0.0024330900243309003);\n\nvoid main() {\n    ivec4 variable_position_im = ((convert_position_fast(gl_FragCoord.yx,v0, v1, v2)));\n\n    int n = variable_position_im.x;\n    int h1 = variable_position_im.y;\n    int w1 = variable_position_im.z; \n    int c1 = variable_position_im.w;\n\n    float sum = 0.0;\n\n    for (int kh = 0; kh < 9; kh++) {\n        int h2 = (h1 + 4 - kh) / 1;\n        if (mod(h1 + 4 - kh, 1) != 0 || h2 < 0 || h2 >= 144) continue;\n\n        for (int kw = 0; kw < 9; kw++) {\n            int w2 = (w1 + 4 - kw) / 1;\n            if (mod(w1 + 4 - kw, 1) != 0 || w2 < 0 || w2 >= 192) continue;\n\n            int khkwc1 = (kh * 9 + kw) * 3 + c1;\n\n            sum += texture2D(v3,((vec2((convert_position_i((vec4(n, h2, w2, khkwc1)),v4, v5, v6))) + 0.5) * v7)).r;\n        }\n    }\n\n    gl_FragColor.r = sum;\n}\n",
    "ElementwiseAdd_e4941740a10281c67f376e11d806c67a11a8c5d3a3335991577eab94": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nconst ivec2 v0 = ivec2(16384,1);\nconst ivec4 v1 = ivec4(27648,1,1,1);\nconst ivec4 v2 = ivec4(3,27648,1,1);\nconst ivec4 v3 = ivec4(3,1,1,1);\nuniform sampler2D v4;\nconst ivec4 v5 = ivec4(1,1,1,1);\nconst ivec2 v6 = ivec2(1,3);\nconst ivec2 v7 = ivec2(3,1);\nconst vec2 v8 = vec2(0.3333333333333333,1.0);\nuniform sampler2D v9;\nconst ivec4 v10 = ivec4(1,3,1,1);\nconst ivec2 v11 = ivec2(1,16384);\nconst ivec2 v12 = ivec2(16384,6);\nconst vec2 v13 = vec2(6.103515625e-05,0.16666666666666666);\n\nvoid main() {\n    float y;\n\n    ivec4 variable_position_y = (convert_position_fast(gl_FragCoord.yx,v0, v1, v2));    \n\nivec4 variable_position_x1 = mod(variable_position_y, v3);\nfloat x1 = texture2D(v4, ((vec2((convert_position_fast(variable_position_x1,v5, v6, v7))) + 0.5) * v8)).r;\nfloat x0 = texture2D(v9, ((vec2((convert_position_fast(variable_position_y,v10, v11, v12))) + 0.5) * v13)).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "Tanh_232cb0b6889b0cc14f630734e424db0f17a05dcb37ca46cac2ead145": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(16384.0,6.0);\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\n\nfloat v = exp(-2.0*abs(x0));\ny = (1.0 - v) / (1.0 + v) * sign(x0);\n\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseMul_d81e1c2f30eecdde46c54b35356f705a644ba4b919886fbf01cf8c2f": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(16384.0,6.0);\nuniform sampler2D v2;\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v1).r;\ny = x0 * x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n",
    "ElementwiseAdd_bd371aeedf15e895fa79de2dbdcc06da36fbb484429c3f58c08bc192": "\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n\nint mod(int x, int p) { return x-(x/p)*p; }\nivec2 mod(int x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(int x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(int x, ivec4 p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, int p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, int p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, int p) { return x-(x/p)*p; }\nivec2 mod(ivec2 x, ivec2 p) { return x-(x/p)*p; }\nivec3 mod(ivec3 x, ivec3 p) { return x-(x/p)*p; }\nivec4 mod(ivec4 x, ivec4 p) { return x-(x/p)*p; }\n\n\nivec2 convert_position_fast(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec2(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec3(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_fast(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec2 convert_position_fast(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec3 convert_position_fast(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec3 convert_position_fast(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec4 convert_position_fast(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return mod((p1[0]*s1[0]+p1[1]*s1[1]+p1[2]*s1[2]+p1[3]*s1[3]) / s2, d2);\n}\n\nivec4 convert_position_fast(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_fast(ivec4(p1), s1, s2, d2);\n}\n\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, ivec2 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec2(p1), ivec2(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec2 p1, vec2 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, ivec2 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec2(p1), ivec2(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec2 p1, vec2 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec2 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, ivec2 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec2(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec2(p1), ivec2(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec2 p1, vec2 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, ivec3 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec3(p1), ivec3(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec3 p1, vec3 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, ivec3 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec3(p1), ivec3(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec3 p1, vec3 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec3 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, ivec3 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec3(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec3(p1), ivec3(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec3 p1, vec3 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec2 index = ivec2(index_offset);\n    ivec2 p2 = ivec2(0);\n    \n    ivec2 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec2 convert_position_i(ivec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, ivec4 s1, ivec2 s2, ivec2 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec2 convert_position_i(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), 0);\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2, int index_offset) {\n    return vec2(convert_position_i(ivec4(p1), ivec4(s1), ivec2(s2), ivec2(d2), index_offset)) + 0.5;\n}\n\nvec2 convert_position(vec4 p1, vec4 s1, vec2 s2, vec2 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec3 index = ivec3(index_offset);\n    ivec3 p2 = ivec3(0);\n    \n    ivec3 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec3 convert_position_i(ivec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, ivec4 s1, ivec3 s2, ivec3 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec3 convert_position_i(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), 0);\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2, int index_offset) {\n    return vec3(convert_position_i(ivec4(p1), ivec4(s1), ivec3(s2), ivec3(d2), index_offset)) + 0.5;\n}\n\nvec3 convert_position(vec4 p1, vec4 s1, vec3 s2, vec3 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2, int index_offset) {\n    ivec4 index_partial = p1 * s1;\n    ivec4 index = ivec4(index_offset);\n    ivec4 p2 = ivec4(0);\n    \n    ivec4 m;\n    \n            index += index_partial[0];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[1];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[2];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n            index += index_partial[3];\n            m = index / s2;\n            p2 += m;\n            index -= m*s2;\n        \n\n    return p2-(p2/d2)*d2;\n}\n\nivec4 convert_position_i(ivec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(p1, s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, ivec4 s1, ivec4 s2, ivec4 d2) {\n    return convert_position_i(ivec4(p1), s1, s2, d2, 0);\n}\n\nivec4 convert_position_i(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), 0);\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2, int index_offset) {\n    return vec4(convert_position_i(ivec4(p1), ivec4(s1), ivec4(s2), ivec4(d2), index_offset)) + 0.5;\n}\n\nvec4 convert_position(vec4 p1, vec4 s1, vec4 s2, vec4 d2) {\n    return convert_position(p1, s1, s2, d2, 0);\n}\n\n\nvec2 var2tex(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\nvec2 var2tex(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    vec3 tex_pos = convert_position(var_position, var_stride, tex_stride, tex_shape);\n    return vec2(tex_pos.y, tex_pos.x);\n}\n\n\nvec2 var2tex_coord(vec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec2 var_position, vec2 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec2(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec3 var_position, vec3 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec3(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(vec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(var_position, var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\nvec2 var2tex_coord(ivec4 var_position, vec4 var_stride, vec3 tex_stride, vec3 tex_shape) {\n    return var2tex(vec4(var_position), var_stride, tex_stride, tex_shape) / tex_shape.yx;\n}\n\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape, int ch) {\n    return convert_position_i(vec3(tex_position.y, tex_position.x, float(ch) + 0.5), tex_stride, var_stride, var_shape);\n}\n\nivec2 tex2var(vec2 tex_position, vec3 tex_stride, vec2 var_stride, vec2 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec3 tex2var(vec2 tex_position, vec3 tex_stride, vec3 var_stride, vec3 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nivec4 tex2var(vec2 tex_position, vec3 tex_stride, vec4 var_stride, vec4 var_shape) {\n    return tex2var(tex_position, tex_stride, var_stride, var_shape, 0);\n}\nuniform sampler2D v0;\nconst vec2 v1 = vec2(16384.0,6.0);\nuniform sampler2D v2;\n\nvoid main() {\n    float y;\n\nfloat x0 = texture2D(v0, gl_FragCoord.xy / v1).r;\nfloat x1 = texture2D(v2, gl_FragCoord.xy / v1).r;\ny = x0 + x1;\n\n    gl_FragColor = vec4(y, 0, 0, 0);\n}\n"
  },
  "exec_infos": [
    {
      "shader_name": "PartialIm2Col_R_d8f0e4bcb30138108195cab30da1d8475b8ce696570d267e5833b79e",
      "inputs": [
        {
          "variable_name": "Variable0",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1200"
    },
    {
      "shader_name": "PartialIm2Col_R_665a25ed8490d025e12e9874850393b498fdaaf59b1da9d9f409d0fb",
      "inputs": [
        {
          "variable_name": "Variable0",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1201"
    },
    {
      "shader_name": "Tensordot_R_be35140ec37a95cc5a78c4eb2d29195203e39de07d920b2c52392918",
      "inputs": [
        {
          "variable_name": "Variable1200",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable684",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1202"
    },
    {
      "shader_name": "Tensordot_R_be35140ec37a95cc5a78c4eb2d29195203e39de07d920b2c52392918",
      "inputs": [
        {
          "variable_name": "Variable1201",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable685",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1203"
    },
    {
      "shader_name": "Concat_copy_to_y_93baf8ab072e0b416ca07e7d8b6dadd73b2fdd62719f1f8531af8b77",
      "inputs": [
        {
          "variable_name": "Variable1319",
          "value": 0
        },
        {
          "variable_name": "Variable1202",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1"
    },
    {
      "shader_name": "Concat_escape_to_ws_4500a3940662cccccd2c753bc9b325679ac6155c7bd004b41cc116b4",
      "inputs": [
        {
          "variable_name": "Variable1",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1319"
    },
    {
      "shader_name": "Concat_copy_to_y_e74a4813a0ad4d0f4312daaa38ff776929f41c76761658003d4d6d0d",
      "inputs": [
        {
          "variable_name": "Variable1319",
          "value": 0
        },
        {
          "variable_name": "Variable1203",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1"
    },
    {
      "shader_name": "Concat_escape_to_ws_4500a3940662cccccd2c753bc9b325679ac6155c7bd004b41cc116b4",
      "inputs": [
        {
          "variable_name": "Variable1",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1319"
    },
    {
      "shader_name": "ElementwiseAdd_779829bb5cb665e69eea4d1c2902f539cc0cee4ff1bf9dc97e8bf833",
      "inputs": [
        {
          "variable_name": "Variable1",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable65",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable2"
    },
    {
      "shader_name": "Elu_b9a552b87870c16adec84feaea24f782cf4347268061f80da56b6828",
      "inputs": [
        {
          "variable_name": "Variable2",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable3"
    },
    {
      "shader_name": "ElementwiseMul_04bbba744889317a7b4edb48bd5881a341cd73edb4005ddee022ff4c",
      "inputs": [
        {
          "variable_name": "Variable3",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable393",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable340"
    },
    {
      "shader_name": "ElementwiseAdd_779829bb5cb665e69eea4d1c2902f539cc0cee4ff1bf9dc97e8bf833",
      "inputs": [
        {
          "variable_name": "Variable340",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable462",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable10"
    },
    {
      "shader_name": "Im2Col_RGBA_6b9840e872afe27be359244c75d28ed6acd207214f062ba1acddbf5d",
      "inputs": [
        {
          "variable_name": "Variable10",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1138"
    },
    {
      "shader_name": "Tensordot_RGBA_d5c92fedfee58336927a29e2e6ba9d135d421fd1a111ead01f7aa983",
      "inputs": [
        {
          "variable_name": "Variable1138",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable683",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1139"
    },
    {
      "shader_name": "ElementwiseAdd_2a81f3f65690c1280460b09f56a4d2872c8ed52bb48d55d97e90095c",
      "inputs": [
        {
          "variable_name": "ConstantVariable72",
          "value": 0
        },
        {
          "variable_name": "Variable1139",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable12"
    },
    {
      "shader_name": "Elu_eec7a8b23eb30d410308000c9b6c9daaa03a962421e31a30188cf866",
      "inputs": [
        {
          "variable_name": "Variable12",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable13"
    },
    {
      "shader_name": "ElementwiseMul_793e0d6f5728828235dd0f42f0afaec2d2f6f901bc5c625532f8503e",
      "inputs": [
        {
          "variable_name": "Variable13",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable387",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable338"
    },
    {
      "shader_name": "ElementwiseAdd_3b9a057dd5a06dcee4045fe6f0c4e23246a748755370205247f23f95",
      "inputs": [
        {
          "variable_name": "Variable338",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable459",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable20"
    },
    {
      "shader_name": "Im2Col_RGBA_f88432d47cdeed67f51f4078e73f5e1831cbc82218bbb80bad0507a8",
      "inputs": [
        {
          "variable_name": "Variable20",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1142"
    },
    {
      "shader_name": "Tensordot_RGBA_6083a98c8c767c1cbe82eeab1a4726e6bd3a301bfdbaa464eec326f0",
      "inputs": [
        {
          "variable_name": "Variable1142",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable682",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1143"
    },
    {
      "shader_name": "ElementwiseAdd_b47c323216519dd3605b3dc630a6be41c47cb25065c097b4e5381885",
      "inputs": [
        {
          "variable_name": "ConstantVariable78",
          "value": 0
        },
        {
          "variable_name": "Variable1143",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable22"
    },
    {
      "shader_name": "Elu_833b6938324c6eb68cb09779ea82c8e912e8921dbdb2869bb1020280",
      "inputs": [
        {
          "variable_name": "Variable22",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable23"
    },
    {
      "shader_name": "ElementwiseMul_20b42d46c6a46409e9a7f4db71a94c1511bca7211f4dfb32a134ca2f",
      "inputs": [
        {
          "variable_name": "Variable23",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable381",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable336"
    },
    {
      "shader_name": "ElementwiseAdd_3b48cbb09bbb597749abbe73528a351b39ea986d1246bb6f503c400e",
      "inputs": [
        {
          "variable_name": "Variable336",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable456",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable30"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable30",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1146"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1146",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable717",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1291"
    },
    {
      "shader_name": "ElementwiseAdd_b47c323216519dd3605b3dc630a6be41c47cb25065c097b4e5381885",
      "inputs": [
        {
          "variable_name": "ConstantVariable453",
          "value": 0
        },
        {
          "variable_name": "Variable1291",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable39"
    },
    {
      "shader_name": "Relu_a3792264d6447601e21e48fcb5f07ef8151fed1509688c634061f2c1",
      "inputs": [
        {
          "variable_name": "Variable39",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable40"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable40",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1150"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1150",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable714",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1293"
    },
    {
      "shader_name": "ElementwiseAdd_b656c8acbb0d34827af73828d6620f3d4f2be005577912b6d6cb1251",
      "inputs": [
        {
          "variable_name": "Variable30",
          "value": 0
        },
        {
          "variable_name": "Variable1293",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v7": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable345"
    },
    {
      "shader_name": "ElementwiseAdd_e43be927c3931563bbd9133021735750f0657aa9cb0f3c84abeb6959",
      "inputs": [
        {
          "variable_name": "Variable345",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable486",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable50"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable50",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1154"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1154",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable720",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1295"
    },
    {
      "shader_name": "ElementwiseAdd_b47c323216519dd3605b3dc630a6be41c47cb25065c097b4e5381885",
      "inputs": [
        {
          "variable_name": "ConstantVariable465",
          "value": 0
        },
        {
          "variable_name": "Variable1295",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable59"
    },
    {
      "shader_name": "Relu_a3792264d6447601e21e48fcb5f07ef8151fed1509688c634061f2c1",
      "inputs": [
        {
          "variable_name": "Variable59",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable60"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable60",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1158"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1158",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable723",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1297"
    },
    {
      "shader_name": "ElementwiseAdd_b656c8acbb0d34827af73828d6620f3d4f2be005577912b6d6cb1251",
      "inputs": [
        {
          "variable_name": "Variable50",
          "value": 0
        },
        {
          "variable_name": "Variable1297",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v7": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable347"
    },
    {
      "shader_name": "ElementwiseAdd_e43be927c3931563bbd9133021735750f0657aa9cb0f3c84abeb6959",
      "inputs": [
        {
          "variable_name": "Variable347",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable483",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable70"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable70",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1162"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1162",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable726",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1299"
    },
    {
      "shader_name": "ElementwiseAdd_b47c323216519dd3605b3dc630a6be41c47cb25065c097b4e5381885",
      "inputs": [
        {
          "variable_name": "ConstantVariable468",
          "value": 0
        },
        {
          "variable_name": "Variable1299",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable79"
    },
    {
      "shader_name": "Relu_a3792264d6447601e21e48fcb5f07ef8151fed1509688c634061f2c1",
      "inputs": [
        {
          "variable_name": "Variable79",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable80"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable80",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1166"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1166",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable729",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1301"
    },
    {
      "shader_name": "ElementwiseAdd_b656c8acbb0d34827af73828d6620f3d4f2be005577912b6d6cb1251",
      "inputs": [
        {
          "variable_name": "Variable70",
          "value": 0
        },
        {
          "variable_name": "Variable1301",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v7": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable349"
    },
    {
      "shader_name": "ElementwiseAdd_e43be927c3931563bbd9133021735750f0657aa9cb0f3c84abeb6959",
      "inputs": [
        {
          "variable_name": "Variable349",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable480",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable90"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable90",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1170"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1170",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable732",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1303"
    },
    {
      "shader_name": "ElementwiseAdd_b47c323216519dd3605b3dc630a6be41c47cb25065c097b4e5381885",
      "inputs": [
        {
          "variable_name": "ConstantVariable471",
          "value": 0
        },
        {
          "variable_name": "Variable1303",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable99"
    },
    {
      "shader_name": "Relu_a3792264d6447601e21e48fcb5f07ef8151fed1509688c634061f2c1",
      "inputs": [
        {
          "variable_name": "Variable99",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable100"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable100",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1174"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1174",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable735",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1305"
    },
    {
      "shader_name": "ElementwiseAdd_b656c8acbb0d34827af73828d6620f3d4f2be005577912b6d6cb1251",
      "inputs": [
        {
          "variable_name": "Variable90",
          "value": 0
        },
        {
          "variable_name": "Variable1305",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v7": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable351"
    },
    {
      "shader_name": "ElementwiseAdd_e43be927c3931563bbd9133021735750f0657aa9cb0f3c84abeb6959",
      "inputs": [
        {
          "variable_name": "Variable351",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable477",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable110"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable110",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1178"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1178",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable711",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1307"
    },
    {
      "shader_name": "ElementwiseAdd_b47c323216519dd3605b3dc630a6be41c47cb25065c097b4e5381885",
      "inputs": [
        {
          "variable_name": "ConstantVariable450",
          "value": 0
        },
        {
          "variable_name": "Variable1307",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable119"
    },
    {
      "shader_name": "Relu_a3792264d6447601e21e48fcb5f07ef8151fed1509688c634061f2c1",
      "inputs": [
        {
          "variable_name": "Variable119",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable120"
    },
    {
      "shader_name": "Im2Col_RGBA_b3ec568ffb4b1674b81e5a0b074cc94d9529e7a318f40ba22d358a2c",
      "inputs": [
        {
          "variable_name": "Variable120",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1182"
    },
    {
      "shader_name": "Tensordot_RGBA_3da49dd556a511b152a7bebf092083e7c2b9f1ab281693bca1d5302c",
      "inputs": [
        {
          "variable_name": "Variable1182",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable708",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1309"
    },
    {
      "shader_name": "ElementwiseAdd_b656c8acbb0d34827af73828d6620f3d4f2be005577912b6d6cb1251",
      "inputs": [
        {
          "variable_name": "Variable110",
          "value": 0
        },
        {
          "variable_name": "Variable1309",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v7": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable353"
    },
    {
      "shader_name": "ElementwiseAdd_3e601c08f2f462298c8fc69e7eb4603c466529ad59194b83e2c0b825",
      "inputs": [
        {
          "variable_name": "Variable353",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable474",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1277"
    },
    {
      "shader_name": "ConvertRtoRGBA_d5fa0934bcf99c6a1f0e53bca17803cf3544459ab386108a411d3886",
      "inputs": [
        {
          "variable_name": "Variable1277",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1243"
    },
    {
      "shader_name": "Tensordot_RGBA_e335f8ecfe6e256e0be88934202c6684799e699d0237c5db01dcdf9f",
      "inputs": [
        {
          "variable_name": "Variable1243",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable677",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1187"
    },
    {
      "shader_name": "Col2Im_cb545a328b95fe19b675e0b66c2291941ac626bd3c778e74e8e97b89",
      "inputs": [
        {
          "variable_name": "Variable1187",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1188"
    },
    {
      "shader_name": "ElementwiseAdd_2a81f3f65690c1280460b09f56a4d2872c8ed52bb48d55d97e90095c",
      "inputs": [
        {
          "variable_name": "ConstantVariable17",
          "value": 0
        },
        {
          "variable_name": "Variable1188",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable132"
    },
    {
      "shader_name": "Elu_eec7a8b23eb30d410308000c9b6c9daaa03a962421e31a30188cf866",
      "inputs": [
        {
          "variable_name": "Variable132",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable133"
    },
    {
      "shader_name": "ElementwiseMul_793e0d6f5728828235dd0f42f0afaec2d2f6f901bc5c625532f8503e",
      "inputs": [
        {
          "variable_name": "Variable133",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable363",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable314"
    },
    {
      "shader_name": "ElementwiseAdd_9a2d6803d446e800a02472ec75f881de8f84ccd90d14b6a5e46a96b1",
      "inputs": [
        {
          "variable_name": "Variable314",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable447",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1279"
    },
    {
      "shader_name": "ConvertRtoRGBA_d1fa172b5dd7fba477133125ff794e5c4d7c64f0385b3cc9c193fc20",
      "inputs": [
        {
          "variable_name": "Variable1279",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1245"
    },
    {
      "shader_name": "Tensordot_RGBA_7686d70cb9ec17831e10eaef0ffd65d7f3a6ae6e01518d87e6bf4fd2",
      "inputs": [
        {
          "variable_name": "Variable1245",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable676",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1192"
    },
    {
      "shader_name": "Col2Im_0493b086a585d9534fdac59416913a43d6b68f8d7e64cada51a7c630",
      "inputs": [
        {
          "variable_name": "Variable1192",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1193"
    },
    {
      "shader_name": "ElementwiseAdd_4ee32a763b2469e020fb5b198a5a3f4c4b528b254e8f3cf51976be0f",
      "inputs": [
        {
          "variable_name": "ConstantVariable20",
          "value": 0
        },
        {
          "variable_name": "Variable1193",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable142"
    },
    {
      "shader_name": "Elu_b9a552b87870c16adec84feaea24f782cf4347268061f80da56b6828",
      "inputs": [
        {
          "variable_name": "Variable142",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable143"
    },
    {
      "shader_name": "ElementwiseMul_04bbba744889317a7b4edb48bd5881a341cd73edb4005ddee022ff4c",
      "inputs": [
        {
          "variable_name": "Variable143",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable357",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable312"
    },
    {
      "shader_name": "SplitAxis_c2e4f00759db25390b1451ed16c963f2ff1d8616ef9d04db6d3067b1",
      "inputs": [
        {
          "variable_name": "Variable312",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1221"
    },
    {
      "shader_name": "SplitAxis_20904a22254540b670c849a0ce5028e43a1d779015c113f716708f5f",
      "inputs": [
        {
          "variable_name": "Variable312",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1222"
    },
    {
      "shader_name": "ElementwiseAdd_941e69524313e2d9b60b1c24fbf02d7c3ea154dd4636abcb85d602df",
      "inputs": [
        {
          "variable_name": "Variable1221",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable674",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1210"
    },
    {
      "shader_name": "SplitAxis_da08c4b33042bbc98d3bb55ed40adac8bce0b5a143fe37bb0e0cec86",
      "inputs": [
        {
          "variable_name": "Variable1210",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1311"
    },
    {
      "shader_name": "SplitAxis_4795a17f337695d36bfe236036809e23292c88fe7586e65cd9270da3",
      "inputs": [
        {
          "variable_name": "Variable1210",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1315"
    },
    {
      "shader_name": "ConvertRtoRGBA_c2dd2708dc5a59741705f29992fc9eae26866547200c1b9ccde1f353",
      "inputs": [
        {
          "variable_name": "Variable1315",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1256"
    },
    {
      "shader_name": "ConvertRtoRGBA_c2dd2708dc5a59741705f29992fc9eae26866547200c1b9ccde1f353",
      "inputs": [
        {
          "variable_name": "Variable1311",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1255"
    },
    {
      "shader_name": "Tensordot_RGBA_2494915644cccf2655a20d88178f93630ee458695c83dc182a09a84c",
      "inputs": [
        {
          "variable_name": "Variable1255",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable694",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1257"
    },
    {
      "shader_name": "Tensordot_RGBA_2494915644cccf2655a20d88178f93630ee458695c83dc182a09a84c",
      "inputs": [
        {
          "variable_name": "Variable1256",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable694",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1258"
    },
    {
      "shader_name": "Concat_copy_to_y_4b19d1c6545fab989f982971aaef90535f24758af1ca4c9949ebd059",
      "inputs": [
        {
          "variable_name": "Variable1320",
          "value": 0
        },
        {
          "variable_name": "Variable1257",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1216"
    },
    {
      "shader_name": "Concat_escape_to_ws_e7330b66c7e8f66e2f609c737d15eda30ccbf485593bda19cd5a1804",
      "inputs": [
        {
          "variable_name": "Variable1216",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1320"
    },
    {
      "shader_name": "Concat_copy_to_y_655fcb1745f3cbc470d63d92f5079eeaaf90e713ee2a64914ff68e5c",
      "inputs": [
        {
          "variable_name": "Variable1320",
          "value": 0
        },
        {
          "variable_name": "Variable1258",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1216"
    },
    {
      "shader_name": "Concat_escape_to_ws_e7330b66c7e8f66e2f609c737d15eda30ccbf485593bda19cd5a1804",
      "inputs": [
        {
          "variable_name": "Variable1216",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1320"
    },
    {
      "shader_name": "ElementwiseAdd_941e69524313e2d9b60b1c24fbf02d7c3ea154dd4636abcb85d602df",
      "inputs": [
        {
          "variable_name": "Variable1222",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable675",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v8": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1211"
    },
    {
      "shader_name": "SplitAxis_da08c4b33042bbc98d3bb55ed40adac8bce0b5a143fe37bb0e0cec86",
      "inputs": [
        {
          "variable_name": "Variable1211",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1313"
    },
    {
      "shader_name": "SplitAxis_4795a17f337695d36bfe236036809e23292c88fe7586e65cd9270da3",
      "inputs": [
        {
          "variable_name": "Variable1211",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1317"
    },
    {
      "shader_name": "ConvertRtoRGBA_c2dd2708dc5a59741705f29992fc9eae26866547200c1b9ccde1f353",
      "inputs": [
        {
          "variable_name": "Variable1313",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1266"
    },
    {
      "shader_name": "Tensordot_RGBA_2494915644cccf2655a20d88178f93630ee458695c83dc182a09a84c",
      "inputs": [
        {
          "variable_name": "Variable1266",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable695",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1268"
    },
    {
      "shader_name": "ConvertRtoRGBA_c2dd2708dc5a59741705f29992fc9eae26866547200c1b9ccde1f353",
      "inputs": [
        {
          "variable_name": "Variable1317",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1267"
    },
    {
      "shader_name": "Tensordot_RGBA_2494915644cccf2655a20d88178f93630ee458695c83dc182a09a84c",
      "inputs": [
        {
          "variable_name": "Variable1267",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable695",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1269"
    },
    {
      "shader_name": "Concat_copy_to_y_4b19d1c6545fab989f982971aaef90535f24758af1ca4c9949ebd059",
      "inputs": [
        {
          "variable_name": "Variable1321",
          "value": 0
        },
        {
          "variable_name": "Variable1268",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1217"
    },
    {
      "shader_name": "Concat_escape_to_ws_e7330b66c7e8f66e2f609c737d15eda30ccbf485593bda19cd5a1804",
      "inputs": [
        {
          "variable_name": "Variable1217",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1321"
    },
    {
      "shader_name": "Concat_copy_to_y_655fcb1745f3cbc470d63d92f5079eeaaf90e713ee2a64914ff68e5c",
      "inputs": [
        {
          "variable_name": "Variable1321",
          "value": 0
        },
        {
          "variable_name": "Variable1269",
          "value": 1
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        },
        "v5": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1217"
    },
    {
      "shader_name": "Concat_escape_to_ws_e7330b66c7e8f66e2f609c737d15eda30ccbf485593bda19cd5a1804",
      "inputs": [
        {
          "variable_name": "Variable1217",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1321"
    },
    {
      "shader_name": "ElementwiseAdd_5cdcfd8d6af8efb5b02caad11413d0e5bedf85f164916397a57c66e9",
      "inputs": [
        {
          "variable_name": "Variable1216",
          "value": 0
        },
        {
          "variable_name": "Variable1217",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable1218"
    },
    {
      "shader_name": "Reshape_7461de959a54be684d71d0b2ab0beff68ac17d8828680b1d2e0ac519",
      "inputs": [
        {
          "variable_name": "Variable1218",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1197"
    },
    {
      "shader_name": "Col2Im_eb74a508d862b4be7c212835d8cb2aa86d71638bad44a08562bf3eb3",
      "inputs": [
        {
          "variable_name": "Variable1197",
          "value": 0
        }
      ],
      "uniforms": {
        "v3": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable1198"
    },
    {
      "shader_name": "ElementwiseAdd_e4941740a10281c67f376e11d806c67a11a8c5d3a3335991577eab94",
      "inputs": [
        {
          "variable_name": "ConstantVariable24",
          "value": 0
        },
        {
          "variable_name": "Variable1198",
          "value": 1
        }
      ],
      "uniforms": {
        "v4": {
          "type": "sampler2D",
          "value": 0
        },
        "v9": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable152"
    },
    {
      "shader_name": "Tanh_232cb0b6889b0cc14f630734e424db0f17a05dcb37ca46cac2ead145",
      "inputs": [
        {
          "variable_name": "Variable152",
          "value": 0
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        }
      },
      "output": "Variable153"
    },
    {
      "shader_name": "ElementwiseMul_d81e1c2f30eecdde46c54b35356f705a644ba4b919886fbf01cf8c2f",
      "inputs": [
        {
          "variable_name": "Variable153",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable123",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable203"
    },
    {
      "shader_name": "ElementwiseAdd_bd371aeedf15e895fa79de2dbdcc06da36fbb484429c3f58c08bc192",
      "inputs": [
        {
          "variable_name": "Variable203",
          "value": 0
        },
        {
          "variable_name": "ConstantVariable276",
          "value": 1
        }
      ],
      "uniforms": {
        "v0": {
          "type": "sampler2D",
          "value": 0
        },
        "v2": {
          "type": "sampler2D",
          "value": 1
        }
      },
      "output": "Variable205"
    }
  ],
  "constants_map": {
    "ConstantVariable684": {
      "byte_offset": 0,
      "size": 7776
    },
    "ConstantVariable685": {
      "byte_offset": 31104,
      "size": 7776
    },
    "ConstantVariable65": {
      "byte_offset": 62208,
      "size": 32
    },
    "ConstantVariable393": {
      "byte_offset": 62336,
      "size": 32
    },
    "ConstantVariable462": {
      "byte_offset": 62464,
      "size": 32
    },
    "ConstantVariable683": {
      "byte_offset": 62592,
      "size": 32768
    },
    "ConstantVariable72": {
      "byte_offset": 193664,
      "size": 64
    },
    "ConstantVariable387": {
      "byte_offset": 193920,
      "size": 64
    },
    "ConstantVariable459": {
      "byte_offset": 194176,
      "size": 64
    },
    "ConstantVariable682": {
      "byte_offset": 194432,
      "size": 131072
    },
    "ConstantVariable78": {
      "byte_offset": 718720,
      "size": 128
    },
    "ConstantVariable381": {
      "byte_offset": 719232,
      "size": 128
    },
    "ConstantVariable456": {
      "byte_offset": 719744,
      "size": 128
    },
    "ConstantVariable717": {
      "byte_offset": 720256,
      "size": 147456
    },
    "ConstantVariable453": {
      "byte_offset": 1310080,
      "size": 128
    },
    "ConstantVariable714": {
      "byte_offset": 1310592,
      "size": 147456
    },
    "ConstantVariable486": {
      "byte_offset": 1900416,
      "size": 128
    },
    "ConstantVariable720": {
      "byte_offset": 1900928,
      "size": 147456
    },
    "ConstantVariable465": {
      "byte_offset": 2490752,
      "size": 128
    },
    "ConstantVariable723": {
      "byte_offset": 2491264,
      "size": 147456
    },
    "ConstantVariable483": {
      "byte_offset": 3081088,
      "size": 128
    },
    "ConstantVariable726": {
      "byte_offset": 3081600,
      "size": 147456
    },
    "ConstantVariable468": {
      "byte_offset": 3671424,
      "size": 128
    },
    "ConstantVariable729": {
      "byte_offset": 3671936,
      "size": 147456
    },
    "ConstantVariable480": {
      "byte_offset": 4261760,
      "size": 128
    },
    "ConstantVariable732": {
      "byte_offset": 4262272,
      "size": 147456
    },
    "ConstantVariable471": {
      "byte_offset": 4852096,
      "size": 128
    },
    "ConstantVariable735": {
      "byte_offset": 4852608,
      "size": 147456
    },
    "ConstantVariable477": {
      "byte_offset": 5442432,
      "size": 128
    },
    "ConstantVariable711": {
      "byte_offset": 5442944,
      "size": 147456
    },
    "ConstantVariable450": {
      "byte_offset": 6032768,
      "size": 128
    },
    "ConstantVariable708": {
      "byte_offset": 6033280,
      "size": 147456
    },
    "ConstantVariable474": {
      "byte_offset": 6623104,
      "size": 128
    },
    "ConstantVariable677": {
      "byte_offset": 6623616,
      "size": 131072
    },
    "ConstantVariable17": {
      "byte_offset": 7147904,
      "size": 64
    },
    "ConstantVariable363": {
      "byte_offset": 7148160,
      "size": 64
    },
    "ConstantVariable447": {
      "byte_offset": 7148416,
      "size": 64
    },
    "ConstantVariable676": {
      "byte_offset": 7148672,
      "size": 32768
    },
    "ConstantVariable20": {
      "byte_offset": 7279744,
      "size": 32
    },
    "ConstantVariable357": {
      "byte_offset": 7279872,
      "size": 32
    },
    "ConstantVariable674": {
      "byte_offset": 7280000,
      "size": 16
    },
    "ConstantVariable694": {
      "byte_offset": 7280064,
      "size": 3888
    },
    "ConstantVariable675": {
      "byte_offset": 7295616,
      "size": 16
    },
    "ConstantVariable695": {
      "byte_offset": 7295680,
      "size": 3888
    },
    "ConstantVariable24": {
      "byte_offset": 7311232,
      "size": 3
    },
    "ConstantVariable123": {
      "byte_offset": 7311244,
      "size": 82944
    },
    "ConstantVariable276": {
      "byte_offset": 7643020,
      "size": 82944
    }
  },
  "licenses": {
    "webdnn": "(C) Machine Intelligence Laboratory (The University of Tokyo), MIT License"
  }
}